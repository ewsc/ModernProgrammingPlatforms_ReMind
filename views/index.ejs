<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task List</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/uikit@3.21.12/dist/css/uikit.min.css" />
</head>

<body>

<div>
    <div class="uk-container uk-background-default uk-margin-large-top">
        <h1 class="uk-heading-bullet"><span>Task List</span></h1>

        <h2 class="uk-heading-bullet uk-margin-medium-top">Filter by</h2>
        <div class="uk-flex uk-width-1-1 uk-margin-small-top">
            <div class="uk-width-4-5">
                <form id="filterForm" method="GET">
                    <label>
                        <select name="filterStatus" class="uk-select" onchange="submitFilter()">
                            <option value="">All</option>
                            <option value="Completed" <% if (filterStatus === 'Completed') { %> selected <% } %>>Completed</option>
                            <option value="In Progress" <% if (filterStatus === 'In Progress') { %> selected <% } %>>In Progress</option>
                            <option value="Pending" <% if (filterStatus === 'Pending') { %> selected <% } %>>Pending</option>
                        </select>
                    </label>
                </form>
            </div>

            <div class="uk-margin-small-left uk-width-1-5">
                <button class="uk-button uk-button-default uk-width-1-1" type="button" uk-toggle="target: #add-new-task">Add New Task</button>
            </div>

            <div id="add-new-task" uk-modal>
                <div class="uk-modal-dialog uk-modal-body">
                    <form id="addTaskForm" enctype="multipart/form-data" class="uk-form-stacked">
                        <div class="uk-margin">
                            <label class="uk-form-label" for="title">Task Title</label>
                            <label>
                                <input type="text" name="title" class="uk-input" placeholder="Task Title" required>
                            </label>
                        </div>
                        <div class="uk-margin">
                            <label class="uk-form-label" for="status">Status</label>
                            <label>
                                <select name="status" class="uk-select" required>
                                    <option value="Completed">Completed</option>
                                    <option value="In Progress">In Progress</option>
                                    <option value="Pending">Pending</option>
                                </select>
                            </label>
                        </div>
                        <div class="uk-margin">
                            <label class="uk-form-label" for="dueDate">Expected Completion Date</label>
                            <label>
                                <input type="date" name="dueDate" class="uk-input" required>
                            </label>
                        </div>

                        <div class="uk-margin">
                            <label class="uk-form-label" for="file">Attach File</label>
                            <input type="file" name="file" class="uk-button uk-button-default">
                        </div>

                        <button type="button" class="uk-button uk-button-primary" onclick="addTask()">Add Task</button>
                    </form>
                </div>
            </div>
        </div>

        <h2 class="uk-heading-bullet"><span>Tasks</span></h2>
        <ul id="taskList" class="uk-list uk-list-divider">
            <% tasks.forEach(task => { %>
                <li id="task-<%= task.id %>">
                    <strong><%= task.title %></strong> -
                    <span class="<%= task.status === 'Completed' ? 'uk-text-success' : task.status === 'In Progress' ? 'uk-text-warning' : 'uk-text-danger' %>">
                        <%= task.status %>
                    </span>
                    <br>Expected Completion Date: <%= new Date(task.dueDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' }) %>
                    <% if (task.file) { %>
                        <br><a href="/uploads/<%= task.file %>">Attached File</a>
                    <% } %>
                    <br>ID: <strong><%= task.id %></strong><br>
                    <button class="uk-button uk-button-danger uk-button-small" onclick="deleteTask('<%= task.id %>')">Delete</button>
                </li>
            <% }); %>
        </ul>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/uikit@3.21.12/dist/js/uikit.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/uikit@3.21.12/dist/js/uikit-icons.min.js"></script>
<script>
    function submitFilter() {
        const form = document.getElementById('filterForm');
        const queryString = new URLSearchParams(new FormData(form)).toString();
        fetch(`/api/tasks?${queryString}`)
            .then(response => response.json())
            .then(tasks => {
                updateTaskList(tasks);
            });
    }

    function updateTaskList(tasks) {
        const taskList = document.getElementById('taskList');
        taskList.innerHTML = '';
        tasks.forEach(task => {
            const listItem = document.createElement('li');
            listItem.id = `task-${task.id}`;
            listItem.innerHTML = `
                <strong>${task.title}</strong> -
                <span class="${task.status === 'Completed' ? 'uk-text-success' : task.status === 'In Progress' ? 'uk-text-warning' : 'uk-text-danger'}">
                    ${task.status}
                </span>
                <br>Expected Completion Date: ${new Date(task.dueDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' })}
                ${task.file ? `<br><a href="/uploads/${task.file}">Attached File</a>` : ''}
                <br>ID: <strong>${task.id}</strong><br>
                <button class="uk-button uk-button-danger uk-button-small" onclick="deleteTask('${task.id}')">Delete</button>
            `;
            taskList.appendChild(listItem);
        });
    }

    function addTask() {
        const form = document.getElementById('addTaskForm');
        const formData = new FormData(form);
        fetch('/api/tasks', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(task => {
                const taskList = document.getElementById('taskList');
                const listItem = document.createElement('li');
                listItem.id = `task-${task.id}`;
                listItem.innerHTML = `
                <strong>${task.title}</strong> -
                <span class="uk-text-success">${task.status}</span>
                <br>Expected Completion Date: ${new Date(task.dueDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' })}
                ${task.file ? `<br><a href="/uploads/${task.file}">Attached File</a>` : ''}
                <br>ID: <strong>${task.id}</strong><br>
                <button class="uk-button uk-button-danger uk-button-small" onclick="deleteTask('${task.id}')">Delete</button>
            `;
                taskList.appendChild(listItem);
                UIkit.modal('#add-new-task').hide();
            });
        UIkit.notification({message: `New Task Added.`, pos: 'bottom-right'});
    }

    function deleteTask(id) {
        fetch(`/api/tasks/${id}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (response.status === 204) {
                    const taskItem = document.getElementById(`task-${id}`);
                    if (taskItem) {
                        taskItem.remove();
                        UIkit.notification({message: `Task Deleted.`, pos: 'bottom-right'});
                    }
                }
            });
    }
</script>
</body>
</html>